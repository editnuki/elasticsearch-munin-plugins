#!/usr/bin/env python

import urllib2
import sys
import os

try:
    import json
except ImportError:
    import simplejson as json


def getNodes():
    host = os.environ.get("host", "127.0.0.1")
    port = 9200
    name = '%s' % os.uname()[1]
    url = "http://{0}:{1}/_nodes/{2}".format(host, port, name)
    req = urllib2.Request(url)
    raw = urllib2.urlopen(req).read()
    jsonData = json.loads( raw )['nodes']
    keyList = jsonData.keys()
    return jsonData[keyList[0]] 

heap_init = "heap_init"
heap_max = "heap_max"
non_heap_init = "non_heap_init"
non_heap_max = "non_heap_max"
direct_max = "direct_max"

def doData():
    print heap_init + ".value " + str( getNodes()["jvm"]["mem"]["heap_init_in_bytes"] )
    print heap_max + ".value " + str( getNodes()["jvm"]["mem"]["heap_max_in_bytes"] )
    print non_heap_init + ".value " + str( getNodes()["jvm"]["mem"]["non_heap_init_in_bytes"] )
    print non_heap_max + ".value " + str( getNodes()["jvm"]["mem"]["non_heap_max_in_bytes"] )
    print direct_max + ".value " + str( getNodes()["jvm"]["mem"]["direct_max_in_bytes"] )


def doConfig():

    print "graph_title elasticsearch node heap"
    print "graph_args --base 1000 -l 0 "
    print "graph_vlabel Bytes"
    print "graph_category elasticsearch_nodes"

    print heap_init + ".label " + heap_init
    print heap_max + ".label " + heap_max
    print non_heap_init + ".label " + non_heap_init
    print non_heap_max + ".label " + non_heap_max
    print direct_max + ".label " + direct_max

if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "config":
        doConfig()
    else:
        doData()
